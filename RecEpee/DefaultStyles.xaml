<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RecEpee.Framework"
                    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase">
    
    <Style TargetType="TextBox" x:Key="DefaultTextBox">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="DefaultTextBlock">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="Button" x:Key="DefaultButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="3"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="roundButton">
        <Style.Resources>
            <SolidColorBrush x:Key="NormalForegroundBrush" Color="#FF8f949b" />
            <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#FFc13535" />
            <SolidColorBrush x:Key="HoverForegroundBrush" Color="#FFf9ebeb" />
            <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#FF431e20" />
            <SolidColorBrush x:Key="PressedForegroundBrush" Color="#FFf9ebeb" />
        </Style.Resources>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">                    
                    <Grid Background="Transparent">
                        <Ellipse Name="backgroundEllipse" ></Ellipse>
                        <Path Name="ButtonPath" Data="M0,0 L1,1 M0,1 L1,0" Stretch="Fill" Stroke="{StaticResource NormalForegroundBrush}" Margin="3"
                              StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backgroundEllipse" Property="Fill" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="backgroundEllipse" Property="Fill" Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource PressedForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="deleteSearchButton" BasedOn="{StaticResource roundButton}">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Parent.Children[0].Text, RelativeSource={RelativeSource Self}}" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ItemsControl" x:Key="ingredientsList">
        <Setter Property="Padding" Value="5,0,5,5"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1,0,0,0" BorderBrush="Black" >
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.RemoveIngredient}" 
                                CommandParameter="{Binding}" Style="{StaticResource roundButton}" Width="13" Height="13" />
                            <TextBlock Margin="5,0,0,0" >
                            <Run Text="{Binding Path=Name, Mode=OneWay}" FontWeight="Bold" />
                            <Run Text="{Binding Path=Quantity, Mode=OneWay}"/>
                            <Run Text="{Binding Path=Unit, Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    
                </DataTemplate>
            </Setter.Value>
        </Setter>            
    </Style>

    <Style TargetType="ItemsControl" x:Key="newIngredientsList">
        <Setter Property="Padding" Value="5,0,5,5"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1,0,0,0" BorderBrush="Black" >
                        <StackPanel Orientation="Horizontal" Margin="5">                            
                            <TextBlock Margin="5,0,0,0" >
                            <Run Text="{Binding Path=Name, Mode=OneWay}" FontWeight="Bold" />
                            <Run Text="{Binding Path=Quantity, Mode=OneWay}"/>
                            <Run Text="{Binding Path=Unit, Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </Border>

                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ItemsControl" x:Key="recipes">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <local:ObjectToVisibilityConverter x:Key="nullConverter"/>

    <Style x:Key="hideIfNullDataContext" TargetType="FrameworkElement">
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource self}, Path=DataContext, Converter={StaticResource nullConverter}}" />
    </Style>
</ResourceDictionary>